#include <iostream> //전처리 지시자

/*
C++ 에서 함수를 사용하고자 한다면?
반드시 그 함수의 원형을 미리 정의하여야 한다
cout은 왜 정의하지 않았는데 사용가능하냐 ?
->'전처리 지시자'때문이다
전처리 지시자에 보통 사용되는 다양한 함수들이
미리 정의되어 있다.
C에서는 .h 라는 헤더파일을 전처리 지시자로서 사용함
C++로 넘어와서는 .h라는 확장자를 안쓰게 되는 풍조가 생김

*/

using namespace std; //세미콜론은 종결자의 의미
// 만약 위에 문장이 없다면 cout, endl 등 앞에다가
// std::를 붙여줘야 정상적으로 컴파일 됨
// 왜냐하면 cout이나 endl같은 경우 iostream에 정의된
//함수인데 그 함수를 쓰기 위해서는 std라는 이름을 가지고
// 있어야함 iostream에 어떤 문자가 있는지는 드래그해서 F12누르면 확인가능


int main() {

	cout << "Hello, world!" << endl;
	//'cout'은 다음에 나오는 문자열을 출력
	// 'endl'은 줄바꿈을 의미
	// 꺽쇄 두개 '<<'는 데이터의 흐름(방향)을 나타냄
	// 여기서는 "Hello"라는 문자열을 "cout"니가 출력시켜줘

	return 0;
}

/*
지금 알아야 될 것은 C++ 코드에는 반드시 main이라는
함수가 있어야 한다.
*/

/////////////////////
/*
1.변수란 무엇인가?
2.변수를 어떻게 선언하는가?
3.변수 사용 규칙이 무엇인가?
*/

#include <iostream>

using namespace std;

int main() {
	//1. 변수 : 변할 수 있는 수
	//cf) 상수 : 변할 수 없는 수

	/*
	1. 변수의 자료형
	2. 변수의 이름
	3. 변수가 어디에 저장되는가(메모리 영역)? 컴파일러가 알아서
	*/

	/*
	-변수명 규칙
	1. 숫자로 시작할 수 없다.
	  ex) int 77aaa;
	2. C++에서 사용하고 있는 키워드는 사용할 수 없다.
	  ex) int return;
	3. white space 사용불가
	  ex) int aa aa;
	*/

	int a; //선언 : 변수의 자료명과 이름을 명시
	a = 7; // 대입 : 선언된 변수에 값을 넣는 것
	int b = 3; // 초기화 : 선언과 동시에 값을 넣는 것

	cout << a << b << endl;
	return 0;
}